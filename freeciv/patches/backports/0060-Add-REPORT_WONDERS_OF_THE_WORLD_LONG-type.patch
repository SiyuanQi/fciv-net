From 7ae156080526735579511e13356693d4dcd10b9a Mon Sep 17 00:00:00 2001
From: Marko Lindqvist <cazfi74@gmail.com>
Date: Sun, 8 Jan 2023 13:20:45 +0200
Subject: [PATCH 60/62] Add REPORT_WONDERS_OF_THE_WORLD_LONG type

No client requests it yet.

Bulk of the patch by Alain BKR

See osdn #42290

Signed-off-by: Marko Lindqvist <cazfi74@gmail.com>
---
 common/networking/packets.h |   3 +-
 server/report.c             | 116 +++++++++++++++++++++++++++++++++++-
 server/report.h             |   1 +
 server/srv_main.c           |   5 +-
 4 files changed, 122 insertions(+), 3 deletions(-)

diff --git a/common/networking/packets.h b/common/networking/packets.h
index 35b869f12c..c958727871 100644
--- a/common/networking/packets.h
+++ b/common/networking/packets.h
@@ -81,6 +81,7 @@ do {                                                    \
 /* Used in network protocol. */
 enum report_type {
   REPORT_WONDERS_OF_THE_WORLD,
+  REPORT_WONDERS_OF_THE_WORLD_LONG,
   REPORT_TOP_CITIES,
   REPORT_DEMOGRAPHIC,
   REPORT_ACHIEVEMENTS
@@ -229,4 +230,4 @@ bool packet_check(struct data_in *din, struct connection *pc);
 }
 #endif /* __cplusplus */
 
-#endif  /* FC__PACKETS_H */
+#endif /* FC__PACKETS_H */
diff --git a/server/report.c b/server/report.c
index a46ede0137..b1fdd2e44e 100644
--- a/server/report.c
+++ b/server/report.c
@@ -407,6 +407,120 @@ void report_top_cities(struct conn_list *dest)
   }
 }
 
+/**********************************************************************//**
+  Send report listing all built and destroyed wonders, and wonders
+  currently being built.
+**************************************************************************/
+void report_wonders_of_the_world_long(struct conn_list *dest)
+{
+  char buffer[4096];
+  const char *separator = "\n";
+  struct strvec *wonderlist = strvec_new();
+
+  buffer[0] = '\0';
+
+  /* Sort by players and cities */
+  players_iterate(pplayer) {
+    int n = 0;
+
+    city_list_iterate(pplayer->cities, pcity) {
+      int w = 0;
+
+      city_built_iterate(pcity, i) {
+        if (is_great_wonder(i)) {
+          w++;
+          n++;
+
+          if (player_count() > team_count()) {
+            /* There exists a team with more than one member. */
+            char team_name[2 * MAX_LEN_NAME];
+
+            team_pretty_name(city_owner(pcity)->team, team_name,
+                             sizeof(team_name));
+            cat_snprintf(buffer, sizeof(buffer),
+                         /* TRANS: "Colossus in Rhodes (Greek, team 2)". */
+                         _("%s in %s (%s, %s)\n"),
+                         city_improvement_name_translation(pcity, i),
+                         city_name_get(pcity),
+                         _(nation_adjective_for_player(pplayer)),
+                         team_name);
+          } else {
+            cat_snprintf(buffer, sizeof(buffer), _("%s in %s (%s)\n"),
+                         city_improvement_name_translation(pcity, i),
+                         city_name_get(pcity),
+                         _(nation_adjective_for_player(pplayer)));
+          }
+        } /* endif is_great_wonder */
+      } city_built_iterate_end;
+
+      if (w != 0) {
+        cat_snprintf(buffer, sizeof(buffer), "\n");
+      }
+    } city_list_iterate_end;
+  } players_iterate_end;
+
+  cat_snprintf(buffer, sizeof(buffer), "----------------------------\n");
+
+  /* Find destroyed wonders */
+  improvement_iterate(imp) {
+    if (is_great_wonder(imp)) {
+      if (great_wonder_is_destroyed(imp)) {
+        cat_snprintf(buffer, sizeof(buffer), _("%s has been DESTROYED\n"),
+                     improvement_name_translation(imp));
+      }
+    }
+  } improvement_iterate_end;
+
+  /* Blank line */
+  cat_snprintf(buffer, sizeof(buffer), "----------------------------\n");
+
+  /* Copy buffer into list before "building %s in ...."
+     because all "building %s" would be sorted at the same letter b */
+
+  strvec_from_str(wonderlist, *separator, buffer);
+
+  improvement_iterate(i) {
+    if (is_great_wonder(i)) {
+      players_iterate(pplayer) {
+        city_list_iterate(pplayer->cities, pcity) {
+          if (VUT_IMPROVEMENT == pcity->production.kind
+           && pcity->production.value.building == i) {
+            if (player_count() > team_count()) {
+              /* There exists a team with more than one member. */
+              char team_name[2 * MAX_LEN_NAME];
+
+              team_pretty_name(city_owner(pcity)->team, team_name,
+                               sizeof(team_name));
+              cat_snprintf(buffer, sizeof(buffer),
+                           /* TRANS: "([...] (Roman, team 4))". */
+                           _("(building %s in %s (%s, %s))\n"),
+                           improvement_name_translation(i), city_name_get(pcity),
+                           _(nation_adjective_for_player(pplayer)), team_name);
+            } else {
+              cat_snprintf(buffer, sizeof(buffer),
+                           _("(building %s in %s (%s))\n"),
+                           improvement_name_translation(i), city_name_get(pcity),
+                           _(nation_adjective_for_player(pplayer)));
+            }
+          }
+        } city_list_iterate_end;
+      } players_iterate_end;
+    }
+  } improvement_iterate_end;
+
+  /* Show again all wonders, sorted alphabetically */
+  /* The separator line will be the first one, no need to add another one */
+  strvec_remove_duplicate(wonderlist, strcmp);
+  strvec_sort(wonderlist, compare_strings_strvec);
+
+  strvec_iterate(wonderlist,wonder) {
+    cat_snprintf(buffer, sizeof(buffer), "%s\n", wonder);
+  } strvec_iterate_end;
+
+  page_conn(dest, _("Traveler's Report:"),
+            _("Wonders of the World"), buffer);
+}
+
 /**********************************************************************//**
   Send report listing all built and destroyed wonders, and wonders
   currently being built.
@@ -482,7 +596,7 @@ void report_wonders_of_the_world(struct conn_list *dest)
 }
 
 /**************************************************************************
- Helper functions which return the value for the given player.
+  Helper functions which return the value for the given player.
 **************************************************************************/
 
 /**********************************************************************//**
diff --git a/server/report.h b/server/report.h
index 173a86c830..90ae9e560f 100644
--- a/server/report.h
+++ b/server/report.h
@@ -36,6 +36,7 @@ void log_civ_score_now(void);
 void make_history_report(void);
 void send_current_history_report(struct conn_list *dest);
 void report_wonders_of_the_world(struct conn_list *dest);
+void report_wonders_of_the_world_long(struct conn_list *dest);
 void report_top_cities(struct conn_list *dest);
 bool is_valid_demography(const char *demography, int *error);
 void report_demographics(struct connection *pconn);
diff --git a/server/srv_main.c b/server/srv_main.c
index 9d8e8235cb..8265393f1d 100644
--- a/server/srv_main.c
+++ b/server/srv_main.c
@@ -1927,7 +1927,7 @@ void fc__noreturn server_quit(void)
 void handle_report_req(struct connection *pconn, enum report_type type)
 {
   struct conn_list *dest = pconn->self;
-  
+
   if (S_S_RUNNING != server_state() && S_S_OVER != server_state()) {
     log_error("Got a report request %d before game start", type);
     return;
@@ -1942,6 +1942,9 @@ void handle_report_req(struct connection *pconn, enum report_type type)
   case REPORT_WONDERS_OF_THE_WORLD:
     report_wonders_of_the_world(dest);
     return;
+  case REPORT_WONDERS_OF_THE_WORLD_LONG:
+    report_wonders_of_the_world_long(dest);
+    return;
   case REPORT_TOP_CITIES:
     report_top_cities(dest);
     return;
-- 
2.39.0

